library :redis do
  default :bin_command, 'redis-server', 'Redis executable bin'
  default :main_dir, '/etc/redis', 'The root directory of Redis configuration'
  default :config_file, main_dir+'/redis.conf', 'Redis main configuration file'
  default :daemonize, 'yes', 'Daemonize server'
  default :port, 6379, 'Redis port'
  default :pidfile, '/var/run/redis.pid'

  phase :install do
    as :root do
      execute(:rm, '/etc/apt/sources.list.d/dotdeb.org.list')
      execute(:touch, '/etc/apt/sources.list.d/dotdeb.org.list')
      execute(:echo, '"deb http://packages.dotdeb.org squeeze all" >> /etc/apt/sources.list.d/dotdeb.org.list')
      execute(:echo, '"deb-src http://packages.dotdeb.org squeeze all" >> /etc/apt/sources.list.d/dotdeb.org.list')
      execute(:wget, '-q -O - http://www.dotdeb.org/dotdeb.gpg | sudo apt-key add -')
    end
    execute('sudo apt-get update')
    execute('sudo apt-get install -y redis-server')
  end

  phase :setup do
    as :root do
      execute(:mkdir, "-p #{args[:main_dir]}") rescue nil
      execute(:touch, args[:config_file])
      execute("echo '# Generated by Tungsten on #{Time.new}' | sudo tee #{args[:config_file]}")
      execute("echo 'daemonize #{args[:daemonize]}' | sudo tee -a #{args[:config_file]}")
      execute("echo 'pidfile #{args[:pidfile]}' | sudo tee -a #{args[:config_file]}")
      execute("echo 'port #{args[:port]}' | sudo tee -a #{args[:config_file]}")
    end
  end

  phase :run do
    within args[:main_dir] do
      as :root do
        execute("sudo #{args[:bin_command]} #{args[:config_file]}") rescue puts("Redis run command failed")
      end
    end
  end

  phase :check do
    pid = capture("sudo cat #{args[:pidfile]}") rescue nil
    if pid
      puts "Redis is running"
    else
      puts "No Redis PID found"
    end
  end

  phase :stop do
    as :root do
      pid = capture("sudo cat #{args[:pidfile]}") rescue nil
      if pid
        execute("sudo kill -9 #{pid}") rescue puts("Process couldn't be killed")
        execute("sudo rm #{args[:pidfile]}") rescue puts("Error removing pidfile")
      else
        puts "No Redis PID found"
      end
    end
  end

  phase :uninstall do
    as :root do
      execute('sudo apt-get remove -y redis-server')
    end
  end
end
